{*package*}

{*import*}

import io.vertx.core.json.JsonArray;
import io.vertx.core.json.JsonObject;
import io.vertx.ext.web.Router;
import io.vertx.ext.web.RoutingContext;

public class {*routerName*} {
	private Router router;

	public {*routerName*}(Router router) {
		super();
		this.router = router;
	}

	/**
	 * 启动{*className*}类相关地址服务
	 */
	public void initRoute() {
		router.get("{*bsGetCount*}").handler(this::{*funGetCount*});
		router.get("{*bsSelectAll*}").handler(this::{*funSelectAll*});
		router.get("{*bsSelectAllByPage*}").handler(this::{*funSelectAllByPage*});
		router.get("{*bsSelectObj*}").handler(this::{*funSelectObj*});
		router.get("{*bsSelectId*}").handler(this::{*funSelectId*});
		router.post("{*bsInsert*}").handler(this::{*funInsert*});
		router.put("{*bsUpdate*}").handler(this::{*funUpdate*});
		router.delete("{*bsDelete*}").handler(this::{*funDelete*});
		{*//*}router.post("{*bsInsertBatch*}").handler(this::{*funInsertBatch*});
	}

	/**
	 * 获得{*className*}总行数
	 * 
	 * @param rct
	 */
	public void {*funGetCount*}(RoutingContext rct) {
		// TODO 修改生成模板或者做点什么
		rct.vertx().eventBus().<Long>send("{*bizBsGetCount*}", null, reply -> {
			if (reply.succeeded()) {
				rct.response().end(reply.result().body().toString());
			} else {
				rct.response().end(reply.cause().toString());
			}
		});

	}

	/**
	 * 获得所有{*className*}
	 * 
	 * @param rct
	 */
	public void {*funSelectAll*}(RoutingContext rct) {
		// TODO 修改生成模板或者做点什么
		rct.vertx().eventBus().<JsonArray>send("{*bizBsSelectAll*}", null, reply -> {
			if (reply.succeeded()) {
				rct.response().end(reply.result().body().toString());
			} else {
				rct.response().end(reply.cause().toString());
			}
		});

	}

	/**
	 * 通过分页获得所有{*className*}
	 * 
	 * @param rct
	 */
	public void {*funSelectAllByPage*}(RoutingContext rct) {
		// TODO 修改生成模板或者做点什么
		rct.vertx().eventBus().<JsonObject>send("{*bizBsSelectAllByPage*}", null, reply -> {
			if (reply.succeeded()) {
				rct.response().end(reply.result().body().toString());
			} else {
				rct.response().end(reply.cause().toString());
			}
		});

	}

	/**
	 * 通过{*className*}获取{*className*}
	 * 
	 * @param rct
	 */
	public void {*funSelectObj*}(RoutingContext rct) {
		// TODO 修改生成模板或者做点什么
		rct.vertx().eventBus().<JsonObject>send("{*bizBsSelectObj*}", null, reply -> {
			if (reply.succeeded()) {
				rct.response().end(reply.result().body().toString());
			} else {
				rct.response().end(reply.cause().toString());
			}
		});
	}

	/**
	 * 通过主键获得{*className*}
	 * 
	 * @param rct
	 */
	public void {*funSelectId*}(RoutingContext rct) {
		// TODO 修改生成模板或者做点什么
		if (rct.getBody() == null || "".equals(rct.getBodyAsString().trim())) {
			rct.response().end("null");
		} else {
			String id = rct.request().getParam("id");
			rct.vertx().eventBus().<JsonObject>send("{*bizBsSelectId*}", id, reply -> {
				if (reply.succeeded()) {
					rct.response().end(reply.result().body().toString());
				} else {
					rct.response().end(reply.cause().toString());
				}
			});
		}
	}

	/**
	 * 将{*className*}添加到数据库
	 * 
	 * @param rct
	 */
	public void {*funInsert*}(RoutingContext rct) {
		// TODO 修改生成模板或者做点什么
		if (rct.getBody() == null || "".equals(rct.getBodyAsString().trim())) {
			rct.response().end("null");
		} else {
			rct.vertx().eventBus().<Integer>send("{*bizBsInsert*}", rct.getBodyAsJson(), reply -> {
				if (reply.succeeded()) {
					rct.response().end(reply.result().body().toString());
				} else {
					rct.response().end(reply.cause().toString());
				}
			});
		}
	}

	/**
	 * 更新{*className*}数据到数据库
	 * 
	 * @param rct
	 */
	public void {*funUpdate*}(RoutingContext rct) {
		// TODO 修改生成模板或者做点什么
		if (rct.getBody() == null || "".equals(rct.getBodyAsString().trim())) {
			rct.response().end("null");
		} else {
			rct.vertx().eventBus().<Integer>send("{*bizBsUpdate*}", rct.getBodyAsJson(), reply -> {
				if (reply.succeeded()) {
					rct.response().end(reply.result().body().toString());
				} else {
					rct.response().end(reply.cause().toString());
				}
			});
		}
	}

	/**
	 * 通过主键删除{*className*}
	 * 
	 * @param rct
	 */
	public void {*funDelete*}(RoutingContext rct) {
		// TODO 修改生成模板或者做点什么
		if (rct.getBody() == null || "".equals(rct.getBodyAsString().trim())) {
			rct.response().end("null");
		} else {
			String id = rct.request().getParam("id");
			rct.vertx().eventBus().<Integer>send("{*bizBsDelete*}", new JsonObject().put("id", id), reply -> {
				if (reply.succeeded()) {
					rct.response().end(reply.result().body().toString());
				} else {
					rct.response().end(reply.cause().toString());
				}
			});
		}

	}

{*routerAdd*}

}
