{*package*}

import java.util.ArrayList;
import java.util.List;

import {*AbstractSQLPackage*}.AbstractSQL;
import {*AbstractSQLPackage*}.SqlPropertyValue;
{*import*}

public class {*sqlName*} extends AbstractSQL<{*className*}> {
	@Override
	protected String tableName() {
		return "{*tableName*}";
	}

	@Override
	protected String primaryId() {
		return null;
	}

	@Override
	protected String columns() {
		return "{*columns*}";
	}
	
	@Override
	public <S> SqlAndParams selectById(S primaryValue) {
		// TODO 需要自己实现
		return null;
	}

	@Override
	public <S> SqlAndParams selectById(S primaryValue, String resultColumns) {
		// TODO 需要自己实现
		return null;
	}

	@Override
	public SqlAndParams updateAllById({*className*} obj) {
		// TODO 需要自己实现
		return null;
	}

	@Override
	public SqlAndParams updateNonEmptyById({*className*} obj) {
		// TODO 需要自己实现
		return null;
	}

	@Override
	public <S> SqlAndParams deleteById(S primaryValue) {
		// TODO 需要自己实现
		return null;
	}

	@Override
	protected List<SqlPropertyValue<?>> propertyValue({*className*} obj) {
		List<SqlPropertyValue<?>> result = new ArrayList<>();
		{*SqlPropertyValueByClz*}
		return result;
	}
	
{*AddSQL*}
}
