{*package*}

{*import*}

import io.vertx.core.AbstractVerticle;
import io.vertx.core.eventbus.Message;
import io.vertx.core.json.JsonArray;
import io.vertx.core.json.JsonObject;

public class {*bizName*} extends AbstractVerticle {

	@Override
	public void start() throws Exception {
		super.start();
		vertx.eventBus().consumer("{*bsGetCount*}", this::{*funGetCount*});
		vertx.eventBus().consumer("{*bsSelectAll*}", this::{*funSelectAll*});
		vertx.eventBus().consumer("{*bsSelectAllByPage*}", this::{*funSelectAllByPage*});
		vertx.eventBus().consumer("{*bsSelectObj*}", this::{*funSelectObj*});
		vertx.eventBus().consumer("{*bsSelectId*}", this::{*funSelectId*});
		vertx.eventBus().consumer("{*bsInsert*}", this::{*funInsert*});
		vertx.eventBus().consumer("{*bsUpdate*}", this::{*funUpdate*});
		vertx.eventBus().consumer("{*bsDelete*}", this::{*funDelete*});
	    {*//*}vertx.eventBus().consumer("{*bsInsertBatch*}", this::{*funInsertBatch*});
	}

	/**
	 * 获得{*className*}数据总行数
	 * 
	 * @param msg
	 */
	public void {*funGetCount*}(Message<JsonObject> msg) {
		// TODO 你可以在这里做点条件判断,比如type=1
		// Integer type = msg.body().getInteger("type");
		// SqlAssist assist = new
		// SqlAssist().setConditions(SqlAssist.andEq("type", type));
		// String message = assist.toJsonStr();
		// send中的null改为message
		vertx.eventBus().<Long>send({*daoName*}.EVENT_BUS_ADDR_GET_COUNT, null, res -> {
			if (res.succeeded()) {
				Long result = res.result().body();
				msg.reply(result);
			} else {
				// TODO 在这里做点什么事情,比如日志记录,你可以直接修改模板做相应的异常处理
				msg.fail(500, "操作失败!");
			}
		});
	}

	/**
	 * 获得所有{*className*}
	 * 
	 * @param msg
	 */
	public void {*funSelectAll*}(Message<JsonObject> msg) {
		// TODO 你可以在这里做点事情比如排序,将id正序排序,同时设置条件id大于5小于10
		// SqlAssist assist = new SqlAssist();
		// assist.setOrders(SqlAssist.order("id", true));
		// assist.setConditions(SqlAssist.andGt("id", 5),
		// SqlAssist.andLt("id",10));
		// String message = assist.toJsonStr();
		// send中的null改为message
		vertx.eventBus().<JsonArray>send({*daoName*}.EVENT_BUS_ADDR_FIND, null, res -> {
			if (res.succeeded()) {
				JsonArray result = res.result().body();
				msg.reply(result);
			} else {
				// TODO 在这里做点什么事情,比如日志记录,你可以直接修改模板做相应的异常处理
				msg.fail(500, "操作失败!");
			}
		});
	}

	/**
	 * 获得所有{*className*}
	 * 
	 * @param msg
	 */
	public void {*funSelectAllByPage*}(Message<JsonObject> msg) {
		// TODO 你可以在这里做点事情比如:从第10行开始取取数据,取15条数据,
		SqlAssist assist = new SqlAssist();
		assist.setStartRow(10).setRowSize(3);
		// 你还可以继续设置条件,排序等
		String message = assist.toJsonStr();
		// send中的null改为message
		vertx.eventBus().<JsonObject>send({*daoName*}.EVENT_BUS_ADDR_FIND_BY_PAGE, message, res -> {
			if (res.succeeded()) {
				JsonObject result = res.result().body();
				msg.reply(result);
			} else {
				// TODO 在这里做点什么事情,比如日志记录,你可以直接修改模板做相应的异常处理
				msg.fail(500, "操作失败!");
			}
		});
	}

	/**
	 * 获得通过{*className*}查询{*className*},可用于登录等
	 * 
	 * @param msg
	 */
	public void {*funSelectObj*}(Message<JsonObject> msg) {
		// TODO 你可以在这里做点事情比如,判断字段是否为空
		vertx.eventBus().<JsonObject>send({*daoName*}.EVENT_BUS_ADDR_GET_BY_OBJ, null, res -> {
			if (res.succeeded()) {
				JsonObject result = res.result().body();
				msg.reply(result);
			} else {
				// TODO 在这里做点什么事情,比如日志记录,你可以直接修改模板做相应的异常处理
				msg.fail(500, "操作失败!");
			}
		});
	}

	/**
	 * 通过主键查询出{*className*}
	 * 
	 * @param msg
	 */
	public void {*funSelectId*}(Message<JsonObject> msg) {
		// TODO 你可以在这里做点事情比如,判断字段是否为空
		// if (msg.body() == null || msg.body().getString("id") == null)
		// {//做点事情因为dao不能接受通过id查询却不传id值}
		vertx.eventBus().<JsonObject>send({*daoName*}.EVENT_BUS_ADDR_GET_BY_ID, null, res -> {
			if (res.succeeded()) {
				JsonObject result = res.result().body();
				msg.reply(result);
			} else {
				// TODO 在这里做点什么事情,比如日志记录,你可以直接修改模板做相应的异常处理
				msg.fail(500, "操作失败!");
			}
		});
	}

	/**
	 * 将{*className*}保存到数据库
	 * 
	 * @param msg
	 */
	public void {*funInsert*}(Message<JsonObject> msg) {
		// TODO 可以在这里做点事情比如判断,不为空跟长度,
		JsonObject body = msg.body();
		if (body == null) {
			// 做点事情
		} else if ({*jsonPeqNull*}) {
			// 做点事情
		} else if ({*jsonLenGt*}) {
			// 做点事情
		} else {
			vertx.eventBus().<Integer>send({*daoName*}.EVENT_BUS_ADDR_INSERT, msg.body(), res -> {
				if (res.succeeded()) {
					Integer result = res.result().body();
					msg.reply(result);
				} else {
					// TODO 在这里做点什么事情,比如日志记录,你可以直接修改模板做相应的异常处理
					msg.fail(500, "操作失败!");
				}
			});
		}
	}

	/**
	 * 将通过主键更新{*className*}
	 * 
	 * @param msg
	 */
	public void {*funUpdate*}(Message<JsonObject> msg) {
		// TODO 可以在这里做点事情比如判断,id不能为空
		JsonObject body = msg.body();
		if (body == null) {
			// 做点事情
		} else if ({*jsonPeqNull*}) {
			// 做点事情
		} else {
			vertx.eventBus().<Integer>send({*daoName*}.EVENT_BUS_ADDR_UPDATE, msg.body(), res -> {
				if (res.succeeded()) {
					Integer result = res.result().body();
					msg.reply(result);
				} else {
					// TODO 在这里做点什么事情,比如日志记录,你可以直接修改模板做相应的异常处理
					msg.fail(500, "操作失败!");
				}
			});
		}
	}

	/**
	 * 通过主键将{*className*}删除
	 * 
	 * @param msg
	 */
	public void {*funDelete*}(Message<JsonObject> msg) {
		// TODO 可以在这里做点事情比如判断,id不能为空
		JsonObject body = msg.body();
		if (body == null) {
			// 做点事情
		} else if (body.getString("") == null) {
			// 做点事情
		} else {
			vertx.eventBus().<Integer>send({*daoName*}.EVENT_BUS_ADDR_DALETE, msg.body(), res -> {
				if (res.succeeded()) {
					Integer result = res.result().body();
					msg.reply(result);
				} else {
					// TODO 在这里做点什么事情,比如日志记录,你可以直接修改模板做相应的异常处理
					msg.fail(500, "操作失败!");
				}
			});
		}
	}

{*bizAdd*}

}
